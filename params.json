{"name":"Pytugol","tagline":"Um projeto simples de um pre-compilador de portugol criado utilizando python.","body":"# [Pytugol](http://github.com/omadson/pytugol)\r\nUm projeto simples que eu chamo de um *pré-compilador de portugol* criado utilizando a linguagem *python*.\r\n\r\nUma ferramenta para auxiliar os aspirantes a programadores e professores que querem iniciar seus alunos em programação.\r\n\r\nEstou desenvolvendo isso por que não tive uma experiência muito boa com o Portugol IDE, a ferramenta é boa para o início, porém quando quero criar funções ou usar estruturas mais complexas não consigo.\r\n\r\nGosto muito de python e amo sua sintaxe, principalmente a questão de forçar identação de código em blocos.\r\n\r\nO script que criei transforma o código criado em portugol para python e o executa, simples assim.\r\n\r\nÉ um programa bem simples e não está tão elegante, mas tá dando pra usar. rs\r\n\r\n## Linguagem\r\n### Palavras reservadas\r\n* escrever\r\n* ler\r\n* função\r\n* se\r\n* senão\r\n* retorne\r\n* para\r\n* na\r\n* faça\r\n\r\n### Características\r\n* Um comando por linha, sem o uso do \";\" (ponto e virgula)\r\n* Blocos são delimitados por indentação\r\n* Comentários:\r\n```\r\n# Olá, eu sou um comentário\r\n```\r\n\r\n### Tipos básicos\r\n* Números: 2 *(inteiro)* / 5.6 *(real)*\r\n* Textos: \"Olá, eu sou um valor textual!\"\r\n* Listas: [1, 3, 4, 7]\r\n* Booleanos: *Verdadeiro* ou *Falso*\r\n\r\n### Operadores\r\n#### Matemáticos (aritméticos)\r\nAceitam valores numéricos como entrada e sua saída também é numérica.\r\n\r\nConsidere **a** e **b** duas variáveis numéricas (inteiro ou real).\r\n\r\n<table>\r\n  <tr>\r\n    <th>Exemplo</th>\r\n    <th>Nome</th>\r\n    <th>Resultado</th>\r\n  </tr>\r\n  <tr>\r\n    <td>a + b</td>\r\n    <td>Soma</td>\r\n    <td>Soma de <b>a</b> e <b>b</b></td>\r\n  </tr>\r\n  <tr>\r\n    <td>a - b</td>\r\n    <td>Subtração</td>\r\n    <td>Subtração de <b>a</b> e <b>b</b></td>\r\n  </tr>\r\n  <tr>\r\n    <td>a * b</td>\r\n    <td>Multiplicação</td>\r\n    <td>Multiplicação de <b>a</b> e <b>b</b></td>\r\n  </tr>\r\n  <tr>\r\n    <td>a / b</td>\r\n    <td>Divisão</td>\r\n    <td>Divisão de <b>a</b> por <b>b</b></td>\r\n  </tr>\r\n  <tr>\r\n    <td>a % b</td>\r\n    <td>Módulo</td>\r\n    <td>Resto da divisão de <b>a</b> por <b>b</b></td>\r\n  </tr>\r\n</table>\r\n\r\n#### Atribuição\r\nConsidere **a** e **b** duas variáveis numéricas (inteiro ou real).\r\n\r\n<table>\r\n  <tr>\r\n    <th>Exemplo</th>\r\n    <th>Nome</th>\r\n    <th>Resultado</th>\r\n  </tr>\r\n  <tr>\r\n    <td>a += b</td>\r\n    <td>Soma</td>\r\n    <td>a = a + b</td>\r\n  </tr>\r\n  <tr>\r\n    <td>a -= b</td>\r\n    <td>Subtração</td>\r\n    <td>a = a - b</td>\r\n  </tr>\r\n  <tr>\r\n    <td>a \\*= b</td>\r\n    <td>Multiplicação</td>\r\n    <td>a = a * b</td>\r\n  </tr>\r\n  <tr>\r\n    <td>a /= b</td>\r\n    <td>Divisão</td>\r\n    <td>a = a / b</td>\r\n  </tr>\r\n  <tr>\r\n    <td>a % b</td>\r\n    <td>Módulo</td>\r\n    <td>a = a % b</td>\r\n  </tr>\r\n</table>\r\n\r\n#### Relacionais\r\nAceitam valores numéricos (inteiro ou real) como entrada e sua saída é lógica(Verdadeiro ou Falso)\r\n\r\nConsidere **a = 10** e **b = 3** duas variáveis numéricas (inteiro ou real).\r\n\r\n<table>\r\n  <tr>\r\n    <th>Exemplo</th>\r\n    <th>Nome</th>\r\n    <th>Resultado</th>\r\n  </tr>\r\n  <tr>\r\n    <td>a > b</td>\r\n    <td>Maior que</td>\r\n    <td>Verdadeiro</td>\r\n  </tr>\r\n  <tr>\r\n    <td>a >= b</td>\r\n    <td>Maior ou igual a</td>\r\n    <td>Verdadeiro</td>\r\n  </tr>\r\n  <tr>\r\n    <td>a &lt; b</td>\r\n    <td>Menor que</td>\r\n    <td>Falso</td>\r\n  </tr>\r\n  <tr>\r\n    <td>a &lt;= b</td>\r\n    <td>Menor ou igual a</td>\r\n    <td>Falso</td>\r\n  </tr>\r\n  <tr>\r\n    <td>a == b</td>\r\n    <td>Igual a</td>\r\n    <td>Falso</td>\r\n  </tr>\r\n  <tr>\r\n    <td>a != b</td>\r\n    <td>Diferente de</td>\r\n    <td>Verdadeiro</td>\r\n  </tr>\r\n</table>\r\n\r\n#### Lógicos\r\nAceitam valores lógicos como entrada e sua saída também é lógica.\r\n\r\nConsidere **a** e **b** duas variáveis de qualquer tipo e **c** uma variável do tipo lógico.\r\n<table>\r\n  <tr>\r\n    <th>Exemplo</th>\r\n    <th>Nome</th>\r\n    <th>Resultado</th>\r\n  </tr>\r\n  <tr>\r\n    <td>a <b>e</b> b</td>\r\n    <td>Conjução</td>\r\n    <td>Soma de <b>a</b> e <b>b</b></td>\r\n  </tr>\r\n  <tr>\r\n    <td>a <b>ou</b> b</td>\r\n    <td>Disjunção</td>\r\n    <td>Resto da divisão de <b>a</b> por <b>b</b></td>\r\n  </tr>\r\n  <tr>\r\n    <td><b>não(</b>c<b>)</b></td>\r\n    <td>Negação</td>\r\n    <td>Retorna o valor invertido da variável <b>c</b></td>\r\n  </tr>\r\n</table>\r\n\r\n\r\n### Sintaxe\r\n\r\n#### Entrada de dados\r\n\r\n```\r\nescrever(\"Olá, mundo!\")\r\n```\r\n#### Entrada de dados\r\n\r\n```\r\nvar = ler(\"Digite um valor para var: \")\r\n```\r\n#### Estrutura de decisão (simples)\r\n```\r\nse condição1 então\r\n    comando1\r\n    comando2\r\n    ...\r\n```\r\n\r\n#### Estrutura de decisão (composta)\r\n```\r\nse condição1 então\r\n    comando1\r\n    comando2\r\n    ...\r\nsenão\r\n    comando5\r\n    comando6\r\n    ...\r\n```\r\n\r\n#### Estrutura de decisão (encadeada)\r\n```\r\nse condição1 então\r\n    comando1\r\n    comando2\r\n    ...\r\nsenão se condição2 então\r\n    comando3\r\n    comando4\r\n    ...\r\nsenão\r\n    comando5\r\n    comando6\r\n    ...\r\n```\r\n\r\n#### Estrutura de repetição (para)\r\n```\r\npara variavel na lista faça\r\n    comando1\r\n    comando2\r\n    comando3\r\n    ...\r\n```\r\n### Estrutura de repetição (enquanto)\r\n```\r\nenquanto condição faça\r\n    comando1\r\n    comando2\r\n    comando3\r\n    ...\r\n```\r\n### Função (sem retorno)\r\n```\r\nfunção nome_da_funcao(argumentos) faça\r\n    comando1\r\n    comando2\r\n    comando3\r\n    ...\r\n```\r\n### Função (com retorno)\r\n```\r\nfunção nome_da_funcao(argumentos) faça\r\n    comando1\r\n    comando2\r\n    comando3\r\n    ...\r\n    retorne valor_de_saida\r\n    ...\r\n```\r\n\r\n\r\n## Como usar?\r\nA versão que estou desenvolvendo ainda não tem suporte para windows.\r\n\r\n### Pré-requisitos\r\n\r\n* Usar linux\r\n* Saber o básico do básico sobre utilização do shell\r\n\r\n### Procedimento\r\n\r\n1. Baixar o arquivo pytugol\r\n2. Colocá-lo dentro da pasta que seus arquivos fonte estão.\r\n3. Abrir o terminal e dar permissão de execução para o arquivo:\r\n```\r\nchmod +x pytugol\r\n```\r\n4. Compilar e executar o algoritmo usando o seguinte comando:\r\n```\r\n./pytugol arquivo_fonte\r\n```\r\n\r\nVocê só precisa dar permissão uma única vês, depois disso, para compilar seus códigos você reperirá somente o passo 4.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}